{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { storage } from './firebase/config';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(null);\n  const [error, setError] = useState(null);\n  const uploadImage = e => {\n    const file = e.target.files[0];\n    const fileRef = ref(storage, `/${file.name}`);\n    const uploadTask = uploadBytesResumable(fileRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(percentage);\n      console.log('Upload is ' + percentage + '% done');\n    }, getDownloadURL(ref(storage, `/${file.name}`)).then(url => {\n      setUrl(url);\n      console.log(url);\n    }).catch(err => {\n      setError(err);\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: uploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [progress, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"HuZ+Lsl+OUb5baZhRrfXSdyH1o0=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","storage","ref","uploadBytesResumable","getDownloadURL","jsxDEV","_jsxDEV","UploadForm","_s","progress","setProgress","url","setUrl","error","setError","uploadImage","e","file","target","files","fileRef","name","uploadTask","on","snapshot","percentage","bytesTransferred","totalBytes","console","log","then","catch","err","id","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { storage } from './firebase/config'\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\nimport \"../styles/upload-form.css\"\n\n\nconst UploadForm = () => {\n\n    \n    const [progress, setProgress ] = useState(0)\n    const [ url, setUrl ] = useState(null)\n    const [ error, setError ] = useState(null)\n    \n    \n    const uploadImage = (e) => { \n\n        const file = e.target.files[0];\n        const fileRef = ref(storage, `/${file.name}`)\n        const uploadTask = uploadBytesResumable(fileRef, file)\n\n        uploadTask.on('state_changed', (snapshot) => {\n            \n        const percentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n        setProgress(percentage)\n        console.log('Upload is ' + percentage + '% done' )},\n\n\n        getDownloadURL(ref(storage, `/${file.name}`))\n        .then((url) => {\n            setUrl(url)\n            console.log(url)\n    \n  })\n  .catch((err) => {\n    setError(err)\n  })\n        )\n    }; \n\n\n\n   \n  return (\n    <form id=\"upload-form\">\n        <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={uploadImage}></input>\n       \n        <div>{ progress } </div>\n    \n    </form>\n  )\n}\n\nexport default UploadForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAEW,GAAG,EAAEC,MAAM,CAAE,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAEa,KAAK,EAAEC,QAAQ,CAAE,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAG1C,MAAMe,WAAW,GAAIC,CAAC,IAAK;IAEvB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,OAAO,GAAGlB,GAAG,CAACD,OAAO,EAAG,IAAGgB,IAAI,CAACI,IAAK,EAAC,CAAC;IAC7C,MAAMC,UAAU,GAAGnB,oBAAoB,CAACiB,OAAO,EAAEH,IAAI,CAAC;IAEtDK,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,QAAQ,IAAK;MAE7C,MAAMC,UAAU,GAAID,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAI;MAC1EjB,WAAW,CAACe,UAAU,CAAC;MACvBG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGJ,UAAU,GAAG,QAAS,CAAC;IAAA,CAAC,EAGnDrB,cAAc,CAACF,GAAG,CAACD,OAAO,EAAG,IAAGgB,IAAI,CAACI,IAAK,EAAC,CAAC,CAAC,CAC5CS,IAAI,CAAEnB,GAAG,IAAK;MACXC,MAAM,CAACD,GAAG,CAAC;MACXiB,OAAO,CAACC,GAAG,CAAClB,GAAG,CAAC;IAE1B,CAAC,CAAC,CACDoB,KAAK,CAAEC,GAAG,IAAK;MACdlB,QAAQ,CAACkB,GAAG,CAAC;IACf,CAAC,CACK,CAAC;EACL,CAAC;EAKH,oBACE1B,OAAA;IAAM2B,EAAE,EAAC,aAAa;IAAAC,QAAA,gBAClB5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,uBAAuB;MAACC,QAAQ,EAAEtB;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjFnC,OAAA;MAAA4B,QAAA,GAAOzB,QAAQ,EAAE,GAAC;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEX,CAAC;AAAAjC,EAAA,CA5CKD,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA8ChB,eAAeA,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}