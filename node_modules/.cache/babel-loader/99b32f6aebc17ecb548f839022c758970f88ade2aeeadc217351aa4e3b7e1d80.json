{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"../firebase/config\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nconst useStorage = file => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = ref(storage, `/${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      getDownloadURL(ref(storage, 'images/stars.jpg')).then(url => {\n        // `url` is the download URL for 'images/stars.jpg'\n\n        // This can be downloaded directly:\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n        xhr.onload = event => {\n          const blob = xhr.response;\n        };\n        xhr.open('GET', url);\n        xhr.send();\n\n        // Or inserted into an <img> element\n        const img = document.getElementById('myimg');\n        img.setAttribute('src', url);\n      }).catch(error => {\n        // Handle any errors\n      });\n      storage_download_via_url.js;\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n_s(useStorage, \"F6mdcBDi5yVdk4Sh19rNffXlCY0=\");\nexport default useStorage;","map":{"version":3,"names":["useState","useEffect","storage","ref","uploadBytesResumable","getDownloadURL","useStorage","file","_s","progress","setProgress","error","setError","url","setUrl","storageRef","name","uploadTask","on","snap","percentage","bytesTransferred","totalBytes","err","then","xhr","XMLHttpRequest","responseType","onload","event","blob","response","open","send","img","document","getElementById","setAttribute","catch","storage_download_via_url","js"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/hooks/useStorage.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { storage } from \"../firebase/config\"\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"\n\nconst useStorage = (file) => { \n    const [ progress, setProgress] = useState(0);\n    const [ error, setError ] = useState(null);\n    const [ url, setUrl ] = useState(null)\n\n\n    useEffect(() => {\n\n        \n        const storageRef = ref(storage, `/${file.name}`)\n        \n        const uploadTask = uploadBytesResumable(storageRef, file);\n       \n        \n        uploadTask.on('state_changed', (snap) => { \n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage)\n        }, (err) => { \n            setError(err);\n        }, async () => { \n            getDownloadURL(ref(storage, 'images/stars.jpg'))\n  .then((url) => {\n    // `url` is the download URL for 'images/stars.jpg'\n\n    // This can be downloaded directly:\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.onload = (event) => {\n      const blob = xhr.response;\n    };\n    xhr.open('GET', url);\n    xhr.send();\n\n    // Or inserted into an <img> element\n    const img = document.getElementById('myimg');\n    img.setAttribute('src', url);\n  })\n  .catch((error) => {\n    // Handle any errors\n  });\nstorage_download_via_url.js\n\n            \n        })\n    }, [file])\n\n    return ( \n        {progress, url, error }\n    )\n}\n\nexport default useStorage"],"mappings":";AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAE5E,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACzB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAEW,KAAK,EAAEC,QAAQ,CAAE,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAEa,GAAG,EAAEC,MAAM,CAAE,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAGtCC,SAAS,CAAC,MAAM;IAGZ,MAAMc,UAAU,GAAGZ,GAAG,CAACD,OAAO,EAAG,IAAGK,IAAI,CAACS,IAAK,EAAC,CAAC;IAEhD,MAAMC,UAAU,GAAGb,oBAAoB,CAACW,UAAU,EAAER,IAAI,CAAC;IAGzDU,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,IAAI,IAAK;MACrC,IAAIC,UAAU,GAAID,IAAI,CAACE,gBAAgB,GAAGF,IAAI,CAACG,UAAU,GAAI,GAAG;MAChEZ,WAAW,CAACU,UAAU,CAAC;IAC3B,CAAC,EAAGG,GAAG,IAAK;MACRX,QAAQ,CAACW,GAAG,CAAC;IACjB,CAAC,EAAE,YAAY;MACXlB,cAAc,CAACF,GAAG,CAACD,OAAO,EAAE,kBAAkB,CAAC,CAAC,CACzDsB,IAAI,CAAEX,GAAG,IAAK;QACb;;QAEA;QACA,MAAMY,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;QAChCD,GAAG,CAACE,YAAY,GAAG,MAAM;QACzBF,GAAG,CAACG,MAAM,GAAIC,KAAK,IAAK;UACtB,MAAMC,IAAI,GAAGL,GAAG,CAACM,QAAQ;QAC3B,CAAC;QACDN,GAAG,CAACO,IAAI,CAAC,KAAK,EAAEnB,GAAG,CAAC;QACpBY,GAAG,CAACQ,IAAI,CAAC,CAAC;;QAEV;QACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;QAC5CF,GAAG,CAACG,YAAY,CAAC,KAAK,EAAExB,GAAG,CAAC;MAC9B,CAAC,CAAC,CACDyB,KAAK,CAAE3B,KAAK,IAAK;QAChB;MAAA,CACD,CAAC;MACJ4B,wBAAwB,CAACC,EAAE;IAGnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACjC,IAAI,CAAC,CAAC;EAEV,OACI;IAACE,QAAQ;IAAEI,GAAG;IAAEF;EAAM,CAAC;AAE/B,CAAC;AAAAH,EAAA,CAjDKF,UAAU;AAmDhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}