{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\";\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  const uploadImage = () => {};\n\n  // const [ file, setFile ] = useState(null);\n  // const [ error, setError ] = useState(null);\n\n  // const types = ['image/png', 'image/jpeg']\n\n  // const changeHandler = (e) => { \n  //     let selected = e.target.files[0];\n  //     console.log(selected)\n  //     if(selected && types.includes(selected.type)) { \n  //         setFile(selected)\n  //         setError('')\n  //     } else {\n  //         setFile(null)\n  //         setError('Please select an acceptable image type (PNG or JPEG)')\n  //     }\n  // };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onClick: uploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 27\n        }, this), file && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          file: file,\n          setFile: setFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ProgressBar","jsxDEV","_jsxDEV","UploadForm","uploadImage","id","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","error","file","name","setFile","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar';\nimport \"../styles/upload-form.css\"\n\nconst UploadForm = () => {\n\n    const uploadImage = () => { \n\n\n    }\n\n    // const [ file, setFile ] = useState(null);\n    // const [ error, setError ] = useState(null);\n    \n    // const types = ['image/png', 'image/jpeg']\n\n    // const changeHandler = (e) => { \n    //     let selected = e.target.files[0];\n    //     console.log(selected)\n    //     if(selected && types.includes(selected.type)) { \n    //         setFile(selected)\n    //         setError('')\n    //     } else {\n    //         setFile(null)\n    //         setError('Please select an acceptable image type (PNG or JPEG)')\n    //     }\n    // };\n  return (\n    <form id=\"upload-form\">\n        <input type=\"file\" onClick={uploadImage}></input>\n        <div>\n            <div className='output'>\n                { error && <div className='error'>{error}</div>}\n                { file && <div>{file.name}</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/> }\n            </div>\n        </div>\n    </form>\n  )\n}\n\nexport default UploadForm"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAErB,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAG1B,CAAC;;EAED;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACF,oBACEF,OAAA;IAAMG,EAAE,EAAC,aAAa;IAAAC,QAAA,gBAClBJ,OAAA;MAAOK,IAAI,EAAC,MAAM;MAACC,OAAO,EAAEJ;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDV,OAAA;MAAAI,QAAA,eACIJ,OAAA;QAAKW,SAAS,EAAC,QAAQ;QAAAP,QAAA,GACjBQ,KAAK,iBAAIZ,OAAA;UAAKW,SAAS,EAAC,OAAO;UAAAP,QAAA,EAAEQ;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC7CG,IAAI,iBAAIb,OAAA;UAAAI,QAAA,EAAMS,IAAI,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9BG,IAAI,iBAAIb,OAAA,CAACF,WAAW;UAACe,IAAI,EAAEA,IAAK;UAACE,OAAO,EAAEA;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAAM,EAAA,GAnCKf,UAAU;AAqChB,eAAeA,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}