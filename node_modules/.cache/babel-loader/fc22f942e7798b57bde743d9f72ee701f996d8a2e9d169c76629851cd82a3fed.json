{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\nimport { storage } from './firebase/config';\nimport { ref, uploadBytes, uploadBytesResumable } from 'firebase/storage';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  // const [ file, setFile ] = useState(null);\n  // const [ error, setError ] = useState(null);\n\n  // const types = ['image/png', 'image/jpeg']\n\n  // const changeHandler = (e) => { \n  //     let selected = e.target.files[0];\n  //     console.log(selected)\n  //     if(selected && types.includes(selected.type)) { \n  //         setFile(selected)\n  //         setError('')\n  //     } else {\n  //         setFile(null)\n  //         setError('Please select an acceptable image type (PNG or JPEG)')\n  //     }\n  // };\n  const [imageUpload, setImageUpload] = useState(null);\n  const uploadImage = e => {\n    let file = e.target.files[0];\n    let fileRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(fileRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: uploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"FvPAwx4nuAQ5ExU2/7gSIT3/q9c=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ProgressBar","storage","ref","uploadBytes","uploadBytesResumable","jsxDEV","_jsxDEV","UploadForm","_s","imageUpload","setImageUpload","uploadImage","e","file","target","files","fileRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","id","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar';\nimport { storage } from './firebase/config'\nimport { ref, uploadBytes, uploadBytesResumable } from 'firebase/storage'\n\nimport \"../styles/upload-form.css\"\n\nconst UploadForm = () => {\n  \n\n    // const [ file, setFile ] = useState(null);\n    // const [ error, setError ] = useState(null);\n    \n    // const types = ['image/png', 'image/jpeg']\n\n    // const changeHandler = (e) => { \n    //     let selected = e.target.files[0];\n    //     console.log(selected)\n    //     if(selected && types.includes(selected.type)) { \n    //         setFile(selected)\n    //         setError('')\n    //     } else {\n    //         setFile(null)\n    //         setError('Please select an acceptable image type (PNG or JPEG)')\n    //     }\n    // };\n    const [ imageUpload, setImageUpload ] = useState(null)\n\n    const uploadImage = (e) => { \n\n        let file = e.target.files[0];\n        let fileRef = ref(storage, file.name)\n        const uploadTask = uploadBytesResumable(fileRef, file)\n\n       uploadTask.on('state_changed', (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n       })\n\n    }\n  return (\n    <form id=\"upload-form\">\n        <input type=\"file\" onChange={uploadImage}></input>\n        \n    \n        {/* <div>\n            <div className='output'>\n                { error && <div className='error'>{error}</div>}\n                { file && <div>{file.name}</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/> }\n            </div>\n        </div> */}\n    </form>\n  )\n}\n\nexport default UploadForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,GAAG,EAAEC,WAAW,EAAEC,oBAAoB,QAAQ,kBAAkB;AAEzE,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAAEC,WAAW,EAAEC,cAAc,CAAE,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,WAAW,GAAIC,CAAC,IAAK;IAEvB,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC5B,IAAIC,OAAO,GAAGd,GAAG,CAACD,OAAO,EAAEY,IAAI,CAACI,IAAI,CAAC;IACrC,MAAMC,UAAU,GAAGd,oBAAoB,CAACY,OAAO,EAAEH,IAAI,CAAC;IAEvDK,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,QAAQ,IAAK;MAC5C,MAAMC,QAAQ,GAAID,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAI;IACzE,CAAC,CAAC;EAEL,CAAC;EACH,oBACEjB,OAAA;IAAMkB,EAAE,EAAC,aAAa;IAAAC,QAAA,eAClBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEhB;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUhD,CAAC;AAEX,CAAC;AAAAvB,EAAA,CA9CKD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAgDhB,eAAeA,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}