{"ast":null,"code":"// // import React from \"react\";\n// // import useStorage from \"./hooks/useStorage\";\n\n// // const ProgressBar = ({file, setFile }) => { \n\n// //     const { url, progress } = useStorage(file)\n// //     console.log(progress, url)\n\n// //     return (\n// //         <div className=\"progress-bar\" style={ {width: progress + '%'}}>progress</div>\n// //     )\n\n// // }\n\n// // export default ProgressBar\n\n// import React, { useState } from 'react'\n// import ProgressBar from './ProgressBar';\n// import { storage } from './firebase/config'\n// import { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\n\n// import \"../styles/upload-form.css\"\n\n// export default const UploadForm = () => {\n\n//     const [progress, setProgress ] = useState(0);\n//     const [ file, setFile ] = useState(null);\n//     const [ error, setError ] = useState(null)\n//     const [ url, setUrl ] = useState(null)\n\n//     const uploadImage = (e) => { \n\n//         let file = e.target.files[0];\n//         let fileRef = ref(storage, file.name)\n//         const uploadTask = uploadBytesResumable(fileRef, file)\n\n//        uploadTask.on('state_changed', (snapshot) => {\n//         const percentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n//         setProgress(percentage)\n//         console.log('Upload is ' + percentage + '% done' )\n//     })\n\n//     }\n\n//     const changeHandler = (e) => {\n\n//         let selected = e.target.files[0];\n\n//         console.log(selected)\n//         if(selected) { \n//             setFile(selected)\n//             setError('')\n//         } else {\n//             setFile(null)\n//             setError('Please select an acceptable image type (PNG or JPEG)')\n\n//     };\n\n//   return (\n//     <form id=\"upload-form\">\n//         <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={changeHandler}></input>\n//         {progress}\n//         <button onClick={uploadImage}>Upload</button>\n\n//         <div>\n//             <div className='output'>\n//                 {/* { error && <div className='error'>{error}</div>} */}\n//                 {/* { file && <div>{file.name}</div>} */}\n//                 {/* { file && <ProgressBar file={file} setFile={setFile}/> } */}\n//             </div>\n//         </div>\n//     </form>\n//   )\n// }\n\n// export default UploadForm","map":{"version":3,"names":[],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/ProgressBar.js"],"sourcesContent":["// // import React from \"react\";\n// // import useStorage from \"./hooks/useStorage\";\n\n// // const ProgressBar = ({file, setFile }) => { \n    \n// //     const { url, progress } = useStorage(file)\n// //     console.log(progress, url)\n    \n// //     return (\n// //         <div className=\"progress-bar\" style={ {width: progress + '%'}}>progress</div>\n// //     )\n    \n// // }\n\n// // export default ProgressBar\n\n\n\n// import React, { useState } from 'react'\n// import ProgressBar from './ProgressBar';\n// import { storage } from './firebase/config'\n// import { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\n\n// import \"../styles/upload-form.css\"\n\n// export default const UploadForm = () => {\n\n    \n//     const [progress, setProgress ] = useState(0);\n//     const [ file, setFile ] = useState(null);\n//     const [ error, setError ] = useState(null)\n//     const [ url, setUrl ] = useState(null)\n    \n    \n//     const uploadImage = (e) => { \n\n//         let file = e.target.files[0];\n//         let fileRef = ref(storage, file.name)\n//         const uploadTask = uploadBytesResumable(fileRef, file)\n\n//        uploadTask.on('state_changed', (snapshot) => {\n//         const percentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n//         setProgress(percentage)\n//         console.log('Upload is ' + percentage + '% done' )\n//     })\n\n//     }\n\n//     const changeHandler = (e) => {\n\n//         let selected = e.target.files[0];\n        \n//         console.log(selected)\n//         if(selected) { \n//             setFile(selected)\n//             setError('')\n//         } else {\n//             setFile(null)\n//             setError('Please select an acceptable image type (PNG or JPEG)')\n       \n        \n\n//     };\n\n//   return (\n//     <form id=\"upload-form\">\n//         <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={changeHandler}></input>\n//         {progress}\n//         <button onClick={uploadImage}>Upload</button>\n    \n//         <div>\n//             <div className='output'>\n//                 {/* { error && <div className='error'>{error}</div>} */}\n//                 {/* { file && <div>{file.name}</div>} */}\n//                 {/* { file && <ProgressBar file={file} setFile={setFile}/> } */}\n//             </div>\n//         </div>\n//     </form>\n//   )\n// }\n\n// export default UploadForm"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}