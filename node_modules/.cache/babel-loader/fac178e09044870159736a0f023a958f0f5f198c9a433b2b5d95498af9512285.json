{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  // const types = ['image/png', 'image/jpeg']\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n    console.log(selected);\n    if (selected) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an acceptable image type (PNG or JPEG)');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 27\n        }, this), file && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          file: file,\n          setFile: setFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"Yfsj4vt96AKQ2qMbTLHkIj2TwHM=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ProgressBar","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","error","setError","changeHandler","e","selected","target","files","console","log","id","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","name","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar';\nimport \"../styles/upload-form.css\"\n\nconst UploadForm = () => {\n  \n\n    const [ file, setFile ] = useState(null);\n    const [ error, setError ] = useState(null);\n    \n    // const types = ['image/png', 'image/jpeg']\n\n    const changeHandler = (e) => { \n        let selected = e.target.files[0];\n        console.log(selected)\n        if(selected) { \n            setFile(selected)\n            setError('')\n        } else {\n            setFile(null)\n            setError('Please select an acceptable image type (PNG or JPEG)')\n        }\n    };\n  return (\n    <form id=\"upload-form\">\n        <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={changeHandler}></input>\n    \n        <div>\n            <div className='output'>\n                { error && <div className='error'>{error}</div>}\n                { file && <div>{file.name}</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/> }\n            </div>\n        </div>\n    </form>\n  )\n}\n\nexport default UploadForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAEQ,KAAK,EAAEC,QAAQ,CAAE,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE1C;;EAEA,MAAMU,aAAa,GAAIC,CAAC,IAAK;IACzB,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,IAAGA,QAAQ,EAAE;MACTL,OAAO,CAACK,QAAQ,CAAC;MACjBH,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHF,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,sDAAsD,CAAC;IACpE;EACJ,CAAC;EACH,oBACEN,OAAA;IAAMc,EAAE,EAAC,aAAa;IAAAC,QAAA,gBAClBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,uBAAuB;MAACC,QAAQ,EAAEX;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEnFtB,OAAA;MAAAe,QAAA,eACIf,OAAA;QAAKuB,SAAS,EAAC,QAAQ;QAAAR,QAAA,GACjBV,KAAK,iBAAIL,OAAA;UAAKuB,SAAS,EAAC,OAAO;UAAAR,QAAA,EAAEV;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC7CnB,IAAI,iBAAIH,OAAA;UAAAe,QAAA,EAAMZ,IAAI,CAACqB;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9BnB,IAAI,iBAAIH,OAAA,CAACF,WAAW;UAACK,IAAI,EAAEA,IAAK;UAACC,OAAO,EAAEA;QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAApB,EAAA,CAhCKD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAkChB,eAAeA,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}