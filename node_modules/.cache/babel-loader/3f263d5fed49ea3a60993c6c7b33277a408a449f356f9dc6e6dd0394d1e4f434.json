{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/ImageTile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport \"../styles/image-tile.css\";\nimport { getStorage, ref, listAll } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageTile = _ref => {\n  _s();\n  let {\n    mugs\n  } = _ref;\n  useEffect(() => {\n    listAll(listRef).then(res => {\n      // res.prefixes.forEach((folderRef) => {\n      //   // All the prefixes under listRef.\n      //   // You may call listAll() recursively on them.\n      // });\n      // res.items.forEach((itemRef) => {\n      //   // All the items under listRef.\n      // });\n    }).catch(error => {\n      // Uh-oh, an error occurred!\n    });\n  }, []);\n  const storage = getStorage();\n\n  // Create a reference under which you want to list\n  const listRef = ref(storage, 'archive/');\n\n  // Find all the prefixes and items.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"image-tile\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageTile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ImageTile;\nexport default ImageTile;\nvar _c;\n$RefreshReg$(_c, \"ImageTile\");","map":{"version":3,"names":["React","useEffect","getStorage","ref","listAll","jsxDEV","_jsxDEV","ImageTile","_ref","_s","mugs","listRef","then","res","catch","error","storage","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/ImageTile.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport \"../styles/image-tile.css\"\nimport { getStorage, ref, listAll } from \"firebase/storage\";\n\nconst ImageTile = ({mugs}) => {\n\n  useEffect(() => { \n    listAll(listRef)\n  .then((res) => {\n    // res.prefixes.forEach((folderRef) => {\n    //   // All the prefixes under listRef.\n    //   // You may call listAll() recursively on them.\n    // });\n    // res.items.forEach((itemRef) => {\n    //   // All the items under listRef.\n    // });\n  }).catch((error) => {\n    // Uh-oh, an error occurred!\n  });\n  }, [])\n\n  const storage = getStorage();\n\n// Create a reference under which you want to list\nconst listRef = ref(storage, 'archive/');\n\n\n// Find all the prefixes and items.\n\n\n  return (\n    <div id=\"image-tile\">\n      <h1>Image</h1>\n    </div>\n  )\n}\n\nexport default ImageTile"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,0BAA0B;AACjC,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAF,IAAA;EAEvBP,SAAS,CAAC,MAAM;IACdG,OAAO,CAACO,OAAO,CAAC,CACjBC,IAAI,CAAEC,GAAG,IAAK;MACb;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClB;IAAA,CACD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGd,UAAU,CAAC,CAAC;;EAE9B;EACA,MAAMS,OAAO,GAAGR,GAAG,CAACa,OAAO,EAAE,UAAU,CAAC;;EAGxC;;EAGE,oBACEV,OAAA;IAAKW,EAAE,EAAC,YAAY;IAAAC,QAAA,eAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAAb,EAAA,CA/BKF,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAiCf,eAAeA,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}