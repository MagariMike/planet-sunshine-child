{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\nimport { storage } from './firebase/config';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState(null);\n  const uploadImage = e => {\n    let file = e.target.files[0];\n    let fileRef = ref(storage, file.name);\n    let selected = e.target.files[0];\n    const uploadTask = uploadBytesResumable(fileRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(percentage);\n      console.log('Upload is ' + percentage + '% done');\n      if (selected) {\n        console.log(selected);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: uploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), progress]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"LmLjCPkQX9vdepXavc6C7glSlzA=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ProgressBar","storage","ref","uploadBytesResumable","getDownloadURL","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","error","setError","progress","setProgress","url","setUrl","uploadImage","e","target","files","fileRef","name","selected","uploadTask","on","snapshot","percentage","bytesTransferred","totalBytes","console","log","id","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar';\nimport { storage } from './firebase/config'\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\n\nimport \"../styles/upload-form.css\"\n\nconst UploadForm = () => {\n  \n\n    const [ file, setFile ] = useState(null);\n    const [ error, setError ] = useState(null);\n    \n  \n    \n    const [progress, setProgress ] = useState(0)\n    const [ url, setUrl ] = useState(null)\n    \n    \n    const uploadImage = (e) => { \n\n        let file = e.target.files[0];\n        let fileRef = ref(storage, file.name)\n        let selected = e.target.files[0];\n        const uploadTask = uploadBytesResumable(fileRef, file)\n\n       uploadTask.on('state_changed', (snapshot) => {\n        const percentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n        setProgress(percentage)\n        console.log('Upload is ' + percentage + '% done' )\n\n        if(selected) { \n            console.log(selected)\n            \n    \n        } \n\n       })\n\n    }\n\n  return (\n    <form id=\"upload-form\">\n        <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={uploadImage}></input>\n        {progress}\n    \n        {/* <div>\n            <div className='output'>\n                { error && <div className='error'>{error}</div>}\n                { file && <div>{file.name}</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/> }\n            </div>\n        </div> */}\n    </form>\n  )\n}\n\nexport default UploadForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAE5E,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAEY,KAAK,EAAEC,QAAQ,CAAE,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAI1C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAE,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAEgB,GAAG,EAAEC,MAAM,CAAE,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAGtC,MAAMkB,WAAW,GAAIC,CAAC,IAAK;IAEvB,IAAIT,IAAI,GAAGS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC5B,IAAIC,OAAO,GAAGnB,GAAG,CAACD,OAAO,EAAEQ,IAAI,CAACa,IAAI,CAAC;IACrC,IAAIC,QAAQ,GAAGL,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChC,MAAMI,UAAU,GAAGrB,oBAAoB,CAACkB,OAAO,EAAEZ,IAAI,CAAC;IAEvDe,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,QAAQ,IAAK;MAC5C,MAAMC,UAAU,GAAID,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAI;MAC1Ef,WAAW,CAACa,UAAU,CAAC;MACvBG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGJ,UAAU,GAAG,QAAS,CAAC;MAElD,IAAGJ,QAAQ,EAAE;QACTO,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;MAGzB;IAED,CAAC,CAAC;EAEL,CAAC;EAEH,oBACEjB,OAAA;IAAM0B,EAAE,EAAC,aAAa;IAAAC,QAAA,gBAClB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,uBAAuB;MAACC,QAAQ,EAAEnB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChF3B,QAAQ;EAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASP,CAAC;AAEX,CAAC;AAAAhC,EAAA,CAhDKD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAkDhB,eAAeA,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}