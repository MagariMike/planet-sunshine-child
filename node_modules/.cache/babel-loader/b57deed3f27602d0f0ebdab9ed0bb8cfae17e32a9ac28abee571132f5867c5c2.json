{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\nimport { storage } from './firebase/config';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport \"../styles/upload-form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n\n  // const [ file, setFile ] = useState(null)\n\n  // const [ url, setUrl ] = useState(null)\n\n  // const [ error, setError ] = useState(null)\n\n  const uploadImage = e => {\n    let file = e.target.files[0];\n    let fileRef = ref(storage, file.name);\n    const uploadTask = uploadBytesResumable(fileRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(percentage);\n      console.log('Upload is ' + percentage + '% done');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: uploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), progress, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 1\n  }, this);\n};\n_s(UploadForm, \"E6a/O6lFpA6U+EXAV8w+yMWQp+c=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ProgressBar","storage","ref","uploadBytesResumable","getDownloadURL","jsxDEV","_jsxDEV","UploadForm","_s","progress","setProgress","uploadImage","e","file","target","files","fileRef","name","uploadTask","on","snapshot","percentage","bytesTransferred","totalBytes","console","log","id","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/mike/Desktop/projects/planet-sunshine-child/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport ProgressBar from './ProgressBar';\n\nimport { storage } from './firebase/config'\n\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\n\nimport \"../styles/upload-form.css\"\n\nconst UploadForm = () => {\n\nconst [progress, setProgress ] = useState(0)\n\n// const [ file, setFile ] = useState(null)\n\n// const [ url, setUrl ] = useState(null)\n\n// const [ error, setError ] = useState(null)\n\nconst uploadImage = (e) => {\n\nlet file = e.target.files[0];\n\nlet fileRef = ref(storage, file.name)\n\nconst uploadTask = uploadBytesResumable(fileRef, file)\n\nuploadTask.on('state_changed', (snapshot) => {\n\nconst percentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100)\n\nsetProgress(percentage)\n\nconsole.log('Upload is ' + percentage + '% done' )\n\n},\n\n)\n\n}\n\nreturn (\n\n<form id=\"upload-form\">\n\n<input type=\"file\" accept=\"image/png, image/jpeg\" onChange={uploadImage}></input>\n\n{progress}\n\n<div>\n\n<div className='output'>\n\n{/* { error && <div className='error'>{error}</div>} */}\n\n{/* { file ? <div>{file.name}</div> : 'please choose a file'} */}\n\n{/* { file && <ProgressBar file={file} setFile={setFile}/> } */}\n\n</div>\n\n</div>\n\n</form>\n\n)\n\n}\n\nexport default UploadForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AAEvC,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAE5E,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAE,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAE5C;;EAEA;;EAEA;;EAEA,MAAMY,WAAW,GAAIC,CAAC,IAAK;IAE3B,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE5B,IAAIC,OAAO,GAAGd,GAAG,CAACD,OAAO,EAAEY,IAAI,CAACI,IAAI,CAAC;IAErC,MAAMC,UAAU,GAAGf,oBAAoB,CAACa,OAAO,EAAEH,IAAI,CAAC;IAEtDK,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,QAAQ,IAAK;MAE7C,MAAMC,UAAU,GAAID,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAI;MAE1Eb,WAAW,CAACW,UAAU,CAAC;MAEvBG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGJ,UAAU,GAAG,QAAS,CAAC;IAElD,CAEA,CAAC;EAED,CAAC;EAED,oBAEAf,OAAA;IAAMoB,EAAE,EAAC,aAAa;IAAAC,QAAA,gBAEtBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,uBAAuB;MAACC,QAAQ,EAAEnB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEhFzB,QAAQ,eAETH,OAAA;MAAAqB,QAAA,eAEArB,OAAA;QAAK6B,SAAS,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAIP,CAAC;AAAA1B,EAAA,CA1DKD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA4DhB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}